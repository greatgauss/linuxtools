usage()
{
    echo "Usage: $(basename $0) [dotfile name]" >&2
    echo "!!! WARNING !!!" >&2
    echo "!!! ALWAYS read callstack from stdin !!!" >&2    
    exit 1
}

if [ $# -eq 1 ];then
	DOTFILE=$1.dot
	if [ -f $DOTFILE ]; then
		echo  ""
		echo  "File $DOTFILE existed. Please remove it."
		exit 2
	fi

	echo  "ALWAYS read callstack from stdin !!!"
	while read line
	do
	  echo "gaokj $line"  >>$TIMEFILE
	done < "${1:-/dev/stdin}"
else
	usage
fi

echo "digraph abc{" >$DOTFILE
echo "node [shape = record, fontname = "Microsoft YaHei", fontsize = 20];" >>$DOTFILE

# delete all the chars before " pc "
# extract the column with contains function name
# extract the function name
# $name ==> [ label = "$name" ];
# concatenate and print files in reverse
# number lines of files: the nubmer is also the node name in dot file.
sed 's/^.* pc //' $TIMEFILE | \
awk '{ print $3 }' | \
sed 's/^(//'| \
sed 's/(.*/()/' | \
sed 's/\+.*/()/'| \
sed 's/\(.*\)/[ label = "\1" ];/' | \
tac | \
nl \
>> $DOTFILE 

# generate the node sequence list: 1 -> 2 -> 3 -> 4 -> 5 ...
line=$(cat $DOTFILE |wc -l)
line=$(expr $line - 2)
xline=$(expr $line - 1)

for i in `seq 1 $xline`;
do
	echo -n $i" -> " >> $DOTFILE
done

echo "$line;" >> $DOTFILE 
echo "}" >>$DOTFILE

echo ""
echo ""
echo "# cat $DOTFILE"
cat $DOTFILE
