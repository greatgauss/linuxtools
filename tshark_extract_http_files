#!/bin/sh

usage()
{
  echo "extract http files" >&2
  echo "usage: $(basename $0) [pcapfile]" >&2
  exit 1
}

if [ $# -ne 1 ]; then
  usage
fi

rm -fr tcp_streams
rm -fr tcp_payloads
rm -fr av

mkdir tcp_streams
mkdir tcp_payloads
mkdir av


PCAPFILE=$1
STREAM_ID_MAX=$(tshark -r ${PCAPFILE} -T fields -e tcp.stream | sort -n | uniq | wc -l)
STREAM_ID_MAX=$(expr ${STREAM_ID_MAX} - 1)
STREAM_IDS=$(seq 0 ${STREAM_ID_MAX})


for STREAM_ID in ${STREAM_IDS} 
do
    STEAM_FILE=tcp_streams/stream-${STREAM_ID}.cap
    PAYLOAD_FILE=tcp_payloads/stream-${STREAM_ID}.payload
    echo Generate ${STEAM_FILE} ...
    tshark -r $PCAPFILE -w ${STEAM_FILE} -Y "tcp.stream==$STREAM_ID"
    tshark -nl -r ${STEAM_FILE} -q -z "follow,tcp,raw,0" | tail -n +7 | xxd -r -p > ${PAYLOAD_FILE}
    FILENAME_BASE=av/$(cat ${PAYLOAD_FILE} | grep  -a "^GET " | awk  '{ print $2 }' |  awk  -F/ '{ print $NF }')
    
    FILENAME=${FILENAME_BASE}
    file_id=0
        while [ "no" != "yes" ]; do
            if [ ! -f "${FILENAME}" ]; then
                echo filename is ${FILENAME}
                sed -n '1,/^Content-Length:/!p' ${PAYLOAD_FILE} | sed -n '1!p' > ${FILENAME}
                break;
            else
                echo ${FILENAME} existed.
            	  file_id=$(expr ${file_id} + 1)
                FILENAME=${FILENAME_BASE}.${file_id}
            fi
        done
done

